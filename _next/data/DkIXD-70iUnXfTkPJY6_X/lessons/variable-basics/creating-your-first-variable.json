{"pageProps":{"post":{"attributes":{"title":"Creating Your First Variable","description":"Learn how to create variables in JavaScript using the let keyword and understand how variables store values in memory."},"html":"<h1>Creating Your First Variable</h1>\n<p>Variables are labeled containers that store information you want to use later in your code.</p>\n<h2>What is a Variable?</h2>\n<ul>\n<li><strong>Container for data</strong> - Variables hold values like numbers, text, or other information</li>\n<li><strong>Reusable references</strong> - Once created, you can use the variable name to access its value anywhere</li>\n<li><strong>Dynamic storage</strong> - Variables can be updated with new values as your program runs</li>\n</ul>\n<h2>Defining Variables</h2>\n<p>In JavaScript there are 3 ways to define variables, but we will focus on just one for now: <code>let</code>.</p>\n<pre><code class=\"hljs language-javascript\"><button class=\"copy-btn\">Copy</button><span class=\"hljs-keyword\">let</span> variableOne\n<span class=\"hljs-keyword\">let</span> name = <span class=\"hljs-string\">&quot;Sally&quot;</span>\n<span class=\"hljs-keyword\">let</span> age = <span class=\"hljs-number\">25</span>\n</code></pre><h3>Key Points:</h3>\n<ul>\n<li><strong>Optional value</strong> - You can create a variable without an initial value</li>\n<li><strong>Single equals (<code>=</code>)</strong> assigns a value to a variable</li>\n<li><strong>Variable names</strong> should be descriptive and meaningful</li>\n<li><strong>Case sensitive</strong> - <code>age</code> and <code>Age</code> are different variables</li>\n</ul>\n<h2>Updating Variable Values</h2>\n<p>One of the powerful features of variables is that you can change their values:</p>\n<pre><code class=\"hljs language-javascript\"><button class=\"copy-btn\">Copy</button><span class=\"hljs-keyword\">let</span> score = <span class=\"hljs-number\">10</span>\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(score) <span class=\"hljs-comment\">// Prints: 10</span>\n\nscore = <span class=\"hljs-number\">15</span>\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(score) <span class=\"hljs-comment\">// Prints: 15</span>\n\nscore = <span class=\"hljs-string\">&quot;name&quot;</span>\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(score) <span class=\"hljs-comment\">// Prints: name</span>\n</code></pre><h2>Benefits of Using Variables</h2>\n<ul>\n<li><strong>Readability</strong>: Makes your code easier to understand</li>\n<li><strong>Maintainability</strong>: You can change values in one place without updating multiple lines</li>\n<li><strong>Reusability</strong>: Use the same variable in different parts of your code</li>\n</ul>\n<h2>Best Practices</h2>\n<ul>\n<li><strong>Use descriptive names</strong>: <code>age</code> instead of <code>a</code></li>\n<li><strong>Use camelCase</strong>: <code>firstName</code> instead of <code>first_name</code></li>\n<li><strong>Minimize changing values</strong>: Try to avoid changing variable values frequently, as it can make your code harder to follow</li>\n</ul>\n","markdown":"\n# Creating Your First Variable\n\nVariables are labeled containers that store information you want to use later in your code.\n\n## What is a Variable?\n\n- **Container for data** - Variables hold values like numbers, text, or other information\n- **Reusable references** - Once created, you can use the variable name to access its value anywhere\n- **Dynamic storage** - Variables can be updated with new values as your program runs\n\n## Defining Variables\n\nIn JavaScript there are 3 ways to define variables, but we will focus on just one for now: `let`.\n\n```javascript\nlet variableOne\nlet name = \"Sally\"\nlet age = 25\n```\n\n### Key Points:\n\n- **Optional value** - You can create a variable without an initial value\n- **Single equals (`=`)** assigns a value to a variable\n- **Variable names** should be descriptive and meaningful\n- **Case sensitive** - `age` and `Age` are different variables\n\n## Updating Variable Values\n\nOne of the powerful features of variables is that you can change their values:\n\n```javascript\nlet score = 10\nconsole.log(score) // Prints: 10\n\nscore = 15\nconsole.log(score) // Prints: 15\n\nscore = \"name\"\nconsole.log(score) // Prints: name\n```\n\n## Benefits of Using Variables\n\n- **Readability**: Makes your code easier to understand\n- **Maintainability**: You can change values in one place without updating multiple lines\n- **Reusability**: Use the same variable in different parts of your code\n\n## Best Practices\n\n- **Use descriptive names**: `age` instead of `a`\n- **Use camelCase**: `firstName` instead of `first_name`\n- **Minimize changing values**: Try to avoid changing variable values frequently, as it can make your code harder to follow\n","slug":"creating-your-first-variable","title":"Creating Your First Variable","section":"Variable Basics","icon":"cube","filePath":"/home/runner/work/fem-getting-started-with-javascript/fem-getting-started-with-javascript/lessons/04-variable-basics/B-creating-your-first-variable.md","nextSlug":"/fem-getting-started-with-javascript/lessons/variable-basics/constants-with-const","prevSlug":"/fem-getting-started-with-javascript/lessons/variable-basics/primitive-types-and-operations"}},"__N_SSG":true}