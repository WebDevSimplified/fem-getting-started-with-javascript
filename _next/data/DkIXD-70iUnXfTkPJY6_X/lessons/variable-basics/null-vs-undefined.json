{"pageProps":{"post":{"attributes":{"description":"Learn about JavaScript's special values null and undefined, understand their differences, and know when to use each one."},"html":"<h1>Representing &quot;Nothing&quot;</h1>\n<p>Representing the lack of a value is confusing in JavaScript since there are two different ways to do it: <code>null</code> and <code>undefined</code>.</p>\n<h2>What Are <code>null</code> and <code>undefined</code>?</h2>\n<p>Both <code>null</code> and <code>undefined</code> represent the lack of a value, but they&#39;re used in different situations:</p>\n<ul>\n<li><code>undefined</code> - means a variable exists but hasn&#39;t been given a value yet</li>\n<li><code>null</code> - means you&#39;ve intentionally set a variable to have no value</li>\n</ul>\n<h2>Understanding <code>undefined</code></h2>\n<p>When you create a variable but don&#39;t give it a value, JavaScript automatically sets it to <code>undefined</code>:</p>\n<pre><code class=\"hljs language-javascript\"><button class=\"copy-btn\">Copy</button><span class=\"hljs-keyword\">let</span> a\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(a) <span class=\"hljs-comment\">// undefined</span>\n</code></pre><p>There are other cases where you might see <code>undefined</code>, which will be covered later, but it always means a value does not exist.</p>\n<h2>Understanding <code>null</code></h2>\n<p><code>null</code> is a value used to indicate &quot;intentionally empty&quot;:</p>\n<pre><code class=\"hljs language-javascript\"><button class=\"copy-btn\">Copy</button><span class=\"hljs-keyword\">let</span> a = <span class=\"hljs-literal\">null</span>\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(a) <span class=\"hljs-comment\">// null</span>\n</code></pre><p>By setting a value to <code>null</code>, you are explicitly saying this variable has <strong>no value</strong>.</p>\n<h2>Best Practices</h2>\n<ol>\n<li><p>Use <code>null</code> for Intentional &quot;Empty&quot; States</p>\n<pre><code class=\"hljs language-javascript\"><button class=\"copy-btn\">Copy</button><span class=\"hljs-keyword\">let</span> selectedFile = <span class=\"hljs-literal\">null</span>\n<span class=\"hljs-keyword\">let</span> currentTheme = <span class=\"hljs-literal\">null</span>\n<span class=\"hljs-keyword\">let</span> lastError = <span class=\"hljs-literal\">null</span>\n</code></pre></li>\n<li><p>Let <code>undefined</code> Happen Naturally</p>\n<pre><code class=\"hljs language-javascript\"><button class=\"copy-btn\">Copy</button><span class=\"hljs-keyword\">let</span> userName <span class=\"hljs-comment\">// Will be set later</span>\n<span class=\"hljs-keyword\">let</span> userPreferences <span class=\"hljs-comment\">// Will be loaded from server</span>\n</code></pre></li>\n<li><p>Use <code>null</code> to Clear Values</p>\n<pre><code class=\"hljs language-javascript\"><button class=\"copy-btn\">Copy</button><span class=\"hljs-keyword\">let</span> name = <span class=\"hljs-string\">&quot;Kyle&quot;</span>\n<span class=\"hljs-comment\">// Other code uses name...</span>\nname = <span class=\"hljs-literal\">null</span> <span class=\"hljs-comment\">// Now name has no value</span>\n</code></pre></li>\n</ol>\n<h2>The Key Difference</h2>\n<ul>\n<li><code>undefined</code> - I haven&#39;t been given a value yet</li>\n<li><code>null</code> - I specifically have no value</li>\n</ul>\n","markdown":"\n# Representing \"Nothing\"\n\nRepresenting the lack of a value is confusing in JavaScript since there are two different ways to do it: `null` and `undefined`.\n\n## What Are `null` and `undefined`?\n\nBoth `null` and `undefined` represent the lack of a value, but they're used in different situations:\n\n- `undefined` - means a variable exists but hasn't been given a value yet\n- `null` - means you've intentionally set a variable to have no value\n\n## Understanding `undefined`\n\nWhen you create a variable but don't give it a value, JavaScript automatically sets it to `undefined`:\n\n```javascript\nlet a\nconsole.log(a) // undefined\n```\n\nThere are other cases where you might see `undefined`, which will be covered later, but it always means a value does not exist.\n\n## Understanding `null`\n\n`null` is a value used to indicate \"intentionally empty\":\n\n```javascript\nlet a = null\nconsole.log(a) // null\n```\n\nBy setting a value to `null`, you are explicitly saying this variable has **no value**.\n\n## Best Practices\n\n1. Use `null` for Intentional \"Empty\" States\n\n   ```javascript\n   let selectedFile = null\n   let currentTheme = null\n   let lastError = null\n   ```\n\n2. Let `undefined` Happen Naturally\n\n   ```javascript\n   let userName // Will be set later\n   let userPreferences // Will be loaded from server\n   ```\n\n3. Use `null` to Clear Values\n\n   ```javascript\n   let name = \"Kyle\"\n   // Other code uses name...\n   name = null // Now name has no value\n   ```\n\n## The Key Difference\n\n- `undefined` - I haven't been given a value yet\n- `null` - I specifically have no value\n","slug":"null-vs-undefined","title":"Null vs Undefined","section":"Variable Basics","icon":"cube","filePath":"/home/runner/work/fem-getting-started-with-javascript/fem-getting-started-with-javascript/lessons/04-variable-basics/D-null-vs-undefined.md","nextSlug":"/fem-getting-started-with-javascript/lessons/functions/introduction-to-functions","prevSlug":"/fem-getting-started-with-javascript/lessons/variable-basics/constants-with-const"}},"__N_SSG":true}