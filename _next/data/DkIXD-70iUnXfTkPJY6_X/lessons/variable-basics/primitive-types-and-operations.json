{"pageProps":{"post":{"attributes":{"description":"Learn about JavaScript's fundamental primitive data types (number, string, boolean) and the basic operations you can perform with them."},"html":"<h1>Primitive Types and Operations</h1>\n<p>JavaScript has several <strong>primitive types</strong> - these are the basic building blocks for all data in your programs.</p>\n<h2>Three Essential Primitives</h2>\n<h3>Number</h3>\n<p>Numbers represent any numeric value - whole numbers, decimals, negative numbers, and special numeric values.</p>\n<!-- prettier-ignore -->\n<pre><code class=\"hljs language-javascript\"><button class=\"copy-btn\">Copy</button>-<span class=\"hljs-number\">10</span>\n<span class=\"hljs-number\">25</span>\n<span class=\"hljs-number\">19.99</span>\n<span class=\"hljs-number\">0</span>\n<span class=\"hljs-title class_\">Infinity</span>\n</code></pre><h3>String</h3>\n<p>Strings represent text data - any sequence of characters enclosed in quotes.</p>\n<!-- prettier-ignore -->\n<pre><code class=\"hljs language-javascript\"><button class=\"copy-btn\">Copy</button><span class=\"hljs-string\">&#x27;Sarah&#x27;</span>\n<span class=\"hljs-string\">&quot;Hello, world!&quot;</span>\n<span class=\"hljs-string\">&#x27;&#x27;</span>\n<span class=\"hljs-string\">&quot;&quot;</span>\n</code></pre><ul>\n<li>Can be created with single or double quotes</li>\n<li>Can be empty (just quotes with nothing inside)</li>\n</ul>\n<h3>Boolean</h3>\n<p>Booleans represent true/false values.</p>\n<pre><code class=\"hljs language-javascript\"><button class=\"copy-btn\">Copy</button><span class=\"hljs-literal\">true</span>\n<span class=\"hljs-literal\">false</span>\n</code></pre><h2>Basic Operations on Primitives</h2>\n<p>Operations are actions you can perform with primitive values. Each type supports different operations.</p>\n<h3>Number Operations</h3>\n<ul>\n<li><p>Arithmetic Operations</p>\n<!-- prettier-ignore -->\n<pre><code class=\"hljs language-javascript\"><button class=\"copy-btn\">Copy</button><span class=\"hljs-comment\">// Basic math</span>\n<span class=\"hljs-number\">10</span> + <span class=\"hljs-number\">3</span> <span class=\"hljs-comment\">// 13</span>\n<span class=\"hljs-number\">10</span> - <span class=\"hljs-number\">3</span> <span class=\"hljs-comment\">// 7</span>\n<span class=\"hljs-number\">10</span> * <span class=\"hljs-number\">3</span> <span class=\"hljs-comment\">// 30</span>\n<span class=\"hljs-number\">10</span> / <span class=\"hljs-number\">3</span> <span class=\"hljs-comment\">// 3.333...</span>\n\n<span class=\"hljs-comment\">// Order of operations applies</span>\n<span class=\"hljs-number\">2</span> + <span class=\"hljs-number\">3</span> * <span class=\"hljs-number\">4</span> <span class=\"hljs-comment\">// 14 (not 20)</span>\n(<span class=\"hljs-number\">2</span> + <span class=\"hljs-number\">3</span>) * <span class=\"hljs-number\">4</span> <span class=\"hljs-comment\">// 20</span>\n</code></pre></li>\n<li><p>Comparison Operations</p>\n<pre><code class=\"hljs language-javascript\"><button class=\"copy-btn\">Copy</button><span class=\"hljs-number\">85</span> == <span class=\"hljs-number\">92</span> <span class=\"hljs-comment\">// false</span>\n<span class=\"hljs-number\">85</span> != <span class=\"hljs-number\">92</span> <span class=\"hljs-comment\">// true</span>\n\n<span class=\"hljs-number\">85</span> &lt; <span class=\"hljs-number\">92</span> <span class=\"hljs-comment\">// true</span>\n<span class=\"hljs-number\">85</span> &gt; <span class=\"hljs-number\">92</span> <span class=\"hljs-comment\">// false</span>\n<span class=\"hljs-number\">85</span> &lt;= <span class=\"hljs-number\">85</span> <span class=\"hljs-comment\">// true</span>\n<span class=\"hljs-number\">92</span> &gt;= <span class=\"hljs-number\">90</span> <span class=\"hljs-comment\">// true</span>\n</code></pre></li>\n</ul>\n<h3>String Operations</h3>\n<ul>\n<li><p>Concatenation (Joining Strings)</p>\n<pre><code class=\"hljs language-javascript\"><button class=\"copy-btn\">Copy</button><span class=\"hljs-string\">&quot;Kyle&quot;</span> + <span class=\"hljs-string\">&quot; &quot;</span> + <span class=\"hljs-string\">&quot;Cook&quot;</span> <span class=\"hljs-comment\">// &quot;Kyle Cook&quot;</span>\n</code></pre></li>\n<li><p>String Comparison</p>\n<pre><code class=\"hljs language-javascript\"><button class=\"copy-btn\">Copy</button><span class=\"hljs-string\">&quot;apple&quot;</span> == <span class=\"hljs-string\">&quot;apple&quot;</span> <span class=\"hljs-comment\">// true</span>\n<span class=\"hljs-string\">&quot;apple&quot;</span> != <span class=\"hljs-string\">&quot;apple&quot;</span> <span class=\"hljs-comment\">// false</span>\n\n<span class=\"hljs-comment\">// Alphabetical comparison</span>\n<span class=\"hljs-string\">&quot;apple&quot;</span> &lt; <span class=\"hljs-string\">&quot;banana&quot;</span> <span class=\"hljs-comment\">// true (&quot;apple&quot; comes before &quot;banana&quot;)</span>\n</code></pre></li>\n</ul>\n<h3>Boolean Operations</h3>\n<ul>\n<li><p>Logical Operations</p>\n<pre><code class=\"hljs language-javascript\"><button class=\"copy-btn\">Copy</button><span class=\"hljs-literal\">true</span> &amp;&amp; <span class=\"hljs-literal\">false</span> <span class=\"hljs-comment\">// false (AND)</span>\n<span class=\"hljs-literal\">true</span> || <span class=\"hljs-literal\">false</span> <span class=\"hljs-comment\">// true (OR)</span>\n!<span class=\"hljs-literal\">true</span> <span class=\"hljs-comment\">// false (NOT)</span>\n</code></pre></li>\n<li><p>Boolean Comparison</p>\n<pre><code class=\"hljs language-javascript\"><button class=\"copy-btn\">Copy</button><span class=\"hljs-literal\">true</span> == <span class=\"hljs-literal\">true</span> <span class=\"hljs-comment\">// true</span>\n<span class=\"hljs-literal\">true</span> == <span class=\"hljs-literal\">false</span> <span class=\"hljs-comment\">// false</span>\n<span class=\"hljs-literal\">true</span> != <span class=\"hljs-literal\">false</span> <span class=\"hljs-comment\">// true</span>\n</code></pre></li>\n</ul>\n<h2>Determining Types</h2>\n<p>You can check the type of any value using the <code>typeof</code> operator:</p>\n<pre><code class=\"hljs language-javascript\"><button class=\"copy-btn\">Copy</button><span class=\"hljs-keyword\">typeof</span> <span class=\"hljs-number\">42</span> <span class=\"hljs-comment\">// &quot;number&quot;</span>\n<span class=\"hljs-keyword\">typeof</span> <span class=\"hljs-string\">&quot;Hello&quot;</span> <span class=\"hljs-comment\">// &quot;string&quot;</span>\n<span class=\"hljs-keyword\">typeof</span> <span class=\"hljs-literal\">true</span> <span class=\"hljs-comment\">// &quot;boolean&quot;</span>\n\n<span class=\"hljs-keyword\">typeof</span> <span class=\"hljs-number\">1</span> == <span class=\"hljs-keyword\">typeof</span> <span class=\"hljs-number\">2</span> <span class=\"hljs-comment\">// true</span>\n</code></pre>","markdown":"\n# Primitive Types and Operations\n\nJavaScript has several **primitive types** - these are the basic building blocks for all data in your programs.\n\n## Three Essential Primitives\n\n### Number\n\nNumbers represent any numeric value - whole numbers, decimals, negative numbers, and special numeric values.\n\n<!-- prettier-ignore -->\n```javascript\n-10\n25\n19.99\n0\nInfinity\n```\n\n### String\n\nStrings represent text data - any sequence of characters enclosed in quotes.\n\n<!-- prettier-ignore -->\n```javascript\n'Sarah'\n\"Hello, world!\"\n''\n\"\"\n```\n\n- Can be created with single or double quotes\n- Can be empty (just quotes with nothing inside)\n\n### Boolean\n\nBooleans represent true/false values.\n\n```javascript\ntrue\nfalse\n```\n\n## Basic Operations on Primitives\n\nOperations are actions you can perform with primitive values. Each type supports different operations.\n\n### Number Operations\n\n- Arithmetic Operations\n  <!-- prettier-ignore -->\n    ```javascript\n    // Basic math\n    10 + 3 // 13\n    10 - 3 // 7\n    10 * 3 // 30\n    10 / 3 // 3.333...\n\n    // Order of operations applies\n    2 + 3 * 4 // 14 (not 20)\n    (2 + 3) * 4 // 20\n    ```\n\n- Comparison Operations\n\n  ```javascript\n  85 == 92 // false\n  85 != 92 // true\n\n  85 < 92 // true\n  85 > 92 // false\n  85 <= 85 // true\n  92 >= 90 // true\n  ```\n\n### String Operations\n\n- Concatenation (Joining Strings)\n\n  ```javascript\n  \"Kyle\" + \" \" + \"Cook\" // \"Kyle Cook\"\n  ```\n\n- String Comparison\n\n  ```javascript\n  \"apple\" == \"apple\" // true\n  \"apple\" != \"apple\" // false\n\n  // Alphabetical comparison\n  \"apple\" < \"banana\" // true (\"apple\" comes before \"banana\")\n  ```\n\n### Boolean Operations\n\n- Logical Operations\n\n  ```javascript\n  true && false // false (AND)\n  true || false // true (OR)\n  !true // false (NOT)\n  ```\n\n- Boolean Comparison\n\n  ```javascript\n  true == true // true\n  true == false // false\n  true != false // true\n  ```\n\n## Determining Types\n\nYou can check the type of any value using the `typeof` operator:\n\n```javascript\ntypeof 42 // \"number\"\ntypeof \"Hello\" // \"string\"\ntypeof true // \"boolean\"\n\ntypeof 1 == typeof 2 // true\n```\n","slug":"primitive-types-and-operations","title":"Primitive Types and Operations","section":"Variable Basics","icon":"cube","filePath":"/home/runner/work/fem-getting-started-with-javascript/fem-getting-started-with-javascript/lessons/04-variable-basics/A-primitive-types-and-operations.md","nextSlug":"/fem-getting-started-with-javascript/lessons/variable-basics/creating-your-first-variable","prevSlug":"/fem-getting-started-with-javascript/lessons/running-javascript/loading-javascript-in-browser"}},"__N_SSG":true}