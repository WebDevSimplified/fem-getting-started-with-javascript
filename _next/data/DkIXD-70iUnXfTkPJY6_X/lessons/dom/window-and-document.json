{"pageProps":{"post":{"attributes":{"description":"Learn about the window and document objects - the foundation for interacting with web pages in JavaScript."},"html":"<h1>Window and Document Objects</h1>\n<p>When JavaScript runs in a browser, it has access to two fundamental global objects: <code>window</code> and <code>document</code>. Understanding these objects is essential for web development, as they provide the interface between your JavaScript code and the web page.</p>\n<h2>The Window Object</h2>\n<p>The <code>window</code> object represents the browser window and serves as the <strong>global object</strong> for all JavaScript running in that window. Everything you access globally is actually a property of the window object.</p>\n<h3>Understanding the Global Nature of Window</h3>\n<pre><code class=\"hljs language-javascript\"><button class=\"copy-btn\">Copy</button><span class=\"hljs-comment\">// These are equivalent:</span>\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">&quot;Hello&quot;</span>)\n<span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-property\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">&quot;Hello&quot;</span>)\n\n<span class=\"hljs-comment\">// Same with other global functions:</span>\n<span class=\"hljs-title function_\">alert</span>(<span class=\"hljs-string\">&quot;Hi there!&quot;</span>)\n<span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-title function_\">alert</span>(<span class=\"hljs-string\">&quot;Hi there!&quot;</span>)\n</code></pre><p>When you use any global function or variable, JavaScript automatically assumes you mean <code>window.something</code>.</p>\n<h3>Exploring the Window Object</h3>\n<pre><code class=\"hljs language-javascript\"><button class=\"copy-btn\">Copy</button><span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-variable language_\">window</span>)\n</code></pre><p>If you run this in your browser console, you&#39;ll see that the window object contains an enormous amount of properties and methods, but you don&#39;t need to worry about memorizing them all.</p>\n<h3>When You Actually Need to Use <code>window</code></h3>\n<p>Most of the time, you don&#39;t need to explicitly write <code>window.</code> because JavaScript assumes it. However, there are some cases where you need to use it:</p>\n<ol>\n<li><p>Conflicting Names</p>\n<p>If you have a variable or function with the same name as a global property, you need to use <code>window</code> to access the global version.</p>\n<pre><code class=\"hljs language-javascript\"><button class=\"copy-btn\">Copy</button><span class=\"hljs-comment\">// If you create a variable with the same name as a global function</span>\n<span class=\"hljs-keyword\">const</span> alert = <span class=\"hljs-string\">&quot;This is my custom alert message&quot;</span>\n\n<span class=\"hljs-comment\">// This won&#x27;t work - it tries to use your variable as a function</span>\n<span class=\"hljs-comment\">// alert(&quot;Hello&quot;) // ❌ Error</span>\n\n<span class=\"hljs-comment\">// But this will work - explicitly uses the window&#x27;s alert function</span>\n<span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-title function_\">alert</span>(alert) <span class=\"hljs-comment\">// ✅ Shows: &quot;This is my custom alert message&quot;</span>\n</code></pre></li>\n<li><p>Creating Global Variables</p>\n<p>If you want to create a global variable that can be accessed in any script, you can assign it directly to <code>window</code>:</p>\n<pre><code class=\"hljs language-javascript\"><button class=\"copy-btn\">Copy</button><span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-property\">myGlobalVar</span> = <span class=\"hljs-string\">&quot;Hello, World!&quot;</span>\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(myGlobalVar) <span class=\"hljs-comment\">// ✅ &quot;Hello, World!&quot;</span>\n</code></pre><p>I would generally recommend against creating global variables, though, as they make your code harder to maintain.</p>\n</li>\n</ol>\n<h2>The Document Object</h2>\n<p>The <code>document</code> object represents the HTML document loaded in the window. The HTML of your page is often referred to as the <strong>DOM</strong> (Document Object Model).</p>\n<h3>What is the Document Object?</h3>\n<pre><code class=\"hljs language-javascript\"><button class=\"copy-btn\">Copy</button><span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-variable language_\">document</span>)\n</code></pre><p>When you log the document object, you&#39;ll see it contains the entire HTML structure of your page - from the <code>&lt;!DOCTYPE html&gt;</code> declaration all the way down to the closing <code>&lt;/html&gt;</code> tag.</p>\n<p>The document object is actually just a property of window:</p>\n<pre><code class=\"hljs language-javascript\"><button class=\"copy-btn\">Copy</button><span class=\"hljs-comment\">// These are equivalent:</span>\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-variable language_\">document</span>)\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-property\">document</span>)\n</code></pre><h3>Key Document Properties</h3>\n<pre><code class=\"hljs language-javascript\"><button class=\"copy-btn\">Copy</button><span class=\"hljs-comment\">// Get the entire HTML element</span>\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-property\">documentElement</span>) <span class=\"hljs-comment\">// The &lt;html&gt; element</span>\n\n<span class=\"hljs-comment\">// Get the body element</span>\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-property\">body</span>) <span class=\"hljs-comment\">// The &lt;body&gt; element</span>\n\n<span class=\"hljs-comment\">// Get the head element</span>\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-property\">head</span>) <span class=\"hljs-comment\">// The &lt;head&gt; element</span>\n\n<span class=\"hljs-comment\">// Get the current URL</span>\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-property\">URL</span>)\n</code></pre>","markdown":"\n# Window and Document Objects\n\nWhen JavaScript runs in a browser, it has access to two fundamental global objects: `window` and `document`. Understanding these objects is essential for web development, as they provide the interface between your JavaScript code and the web page.\n\n## The Window Object\n\nThe `window` object represents the browser window and serves as the **global object** for all JavaScript running in that window. Everything you access globally is actually a property of the window object.\n\n### Understanding the Global Nature of Window\n\n```javascript\n// These are equivalent:\nconsole.log(\"Hello\")\nwindow.console.log(\"Hello\")\n\n// Same with other global functions:\nalert(\"Hi there!\")\nwindow.alert(\"Hi there!\")\n```\n\nWhen you use any global function or variable, JavaScript automatically assumes you mean `window.something`.\n\n### Exploring the Window Object\n\n```javascript\nconsole.log(window)\n```\n\nIf you run this in your browser console, you'll see that the window object contains an enormous amount of properties and methods, but you don't need to worry about memorizing them all.\n\n### When You Actually Need to Use `window`\n\nMost of the time, you don't need to explicitly write `window.` because JavaScript assumes it. However, there are some cases where you need to use it:\n\n1. Conflicting Names\n\n   If you have a variable or function with the same name as a global property, you need to use `window` to access the global version.\n\n   ```javascript\n   // If you create a variable with the same name as a global function\n   const alert = \"This is my custom alert message\"\n\n   // This won't work - it tries to use your variable as a function\n   // alert(\"Hello\") // ❌ Error\n\n   // But this will work - explicitly uses the window's alert function\n   window.alert(alert) // ✅ Shows: \"This is my custom alert message\"\n   ```\n\n2. Creating Global Variables\n\n   If you want to create a global variable that can be accessed in any script, you can assign it directly to `window`:\n\n   ```javascript\n   window.myGlobalVar = \"Hello, World!\"\n   console.log(myGlobalVar) // ✅ \"Hello, World!\"\n   ```\n\n   I would generally recommend against creating global variables, though, as they make your code harder to maintain.\n\n## The Document Object\n\nThe `document` object represents the HTML document loaded in the window. The HTML of your page is often referred to as the **DOM** (Document Object Model).\n\n### What is the Document Object?\n\n```javascript\nconsole.log(document)\n```\n\nWhen you log the document object, you'll see it contains the entire HTML structure of your page - from the `<!DOCTYPE html>` declaration all the way down to the closing `</html>` tag.\n\nThe document object is actually just a property of window:\n\n```javascript\n// These are equivalent:\nconsole.log(document)\nconsole.log(window.document)\n```\n\n### Key Document Properties\n\n```javascript\n// Get the entire HTML element\nconsole.log(document.documentElement) // The <html> element\n\n// Get the body element\nconsole.log(document.body) // The <body> element\n\n// Get the head element\nconsole.log(document.head) // The <head> element\n\n// Get the current URL\nconsole.log(document.URL)\n```\n","slug":"window-and-document","title":"Window and Document","section":"DOM","icon":"sitemap","filePath":"/home/runner/work/fem-getting-started-with-javascript/fem-getting-started-with-javascript/lessons/09-dom/A-window-and-document.md","nextSlug":"/fem-getting-started-with-javascript/lessons/dom/selecting-elements","prevSlug":"/fem-getting-started-with-javascript/lessons/control-flow/array-methods"}},"__N_SSG":true}