{"pageProps":{"post":{"attributes":{"description":"Learn how to create and work with arrays to store multiple values in a single variable."},"html":"<h1>Arrays</h1>\n<p>Up until now, we&#39;ve been creating variables that store a single value, but what if we want to store multiple values in one variable? This is where <strong>arrays</strong> come in!</p>\n<h2>What is an Array?</h2>\n<p>An array is a list of values stored in a single variable. Think of it like a container that can hold multiple items.</p>\n<pre><code class=\"hljs language-javascript\"><button class=\"copy-btn\">Copy</button><span class=\"hljs-comment\">// Single values</span>\n<span class=\"hljs-keyword\">const</span> number = <span class=\"hljs-number\">5</span>\n<span class=\"hljs-keyword\">const</span> name = <span class=\"hljs-string\">&quot;Kyle&quot;</span>\n\n<span class=\"hljs-comment\">// Multiple values in an array</span>\n<span class=\"hljs-keyword\">const</span> numbers = [<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">5</span>]\n<span class=\"hljs-keyword\">const</span> names = [<span class=\"hljs-string\">&quot;Kyle&quot;</span>, <span class=\"hljs-string\">&quot;Sarah&quot;</span>, <span class=\"hljs-string\">&quot;John&quot;</span>]\n</code></pre><h2>Creating Arrays</h2>\n<p>To create an array, use square brackets <code>[]</code> and separate values with commas:</p>\n<pre><code class=\"hljs language-javascript\"><button class=\"copy-btn\">Copy</button><span class=\"hljs-keyword\">const</span> letters = [<span class=\"hljs-string\">&quot;A&quot;</span>, <span class=\"hljs-string\">&quot;B&quot;</span>, <span class=\"hljs-string\">&quot;C&quot;</span>, <span class=\"hljs-string\">&quot;D&quot;</span>, <span class=\"hljs-string\">&quot;E&quot;</span>]\n<span class=\"hljs-keyword\">const</span> numbers = [<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">5</span>, <span class=\"hljs-number\">6</span>, <span class=\"hljs-number\">7</span>, <span class=\"hljs-number\">8</span>, <span class=\"hljs-number\">9</span>, <span class=\"hljs-number\">10</span>]\n</code></pre><p>You can format arrays on multiple lines for readability:</p>\n<pre><code class=\"hljs language-javascript\"><button class=\"copy-btn\">Copy</button><span class=\"hljs-keyword\">const</span> longList = [\n  <span class=\"hljs-string\">&quot;Kyle&quot;</span>,\n  <span class=\"hljs-string\">&quot;Sarah&quot;</span>,\n  <span class=\"hljs-string\">&quot;John&quot;</span>,\n  <span class=\"hljs-string\">&quot;Alice&quot;</span>,\n  <span class=\"hljs-string\">&quot;Bob&quot;</span>,\n  <span class=\"hljs-string\">&quot;Charlie&quot;</span>,\n  <span class=\"hljs-string\">&quot;Mike&quot;</span>,\n  <span class=\"hljs-string\">&quot;Emma&quot;</span>,\n]\n</code></pre><h2>Accessing Array Elements</h2>\n<p>Use square brackets with a number corresponding to the position of the element in the array to access it:</p>\n<pre><code class=\"hljs language-javascript\"><button class=\"copy-btn\">Copy</button><span class=\"hljs-keyword\">const</span> numbers = [<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">5</span>]\n\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(numbers[<span class=\"hljs-number\">0</span>]) <span class=\"hljs-comment\">// 1 (first element)</span>\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(numbers[<span class=\"hljs-number\">1</span>]) <span class=\"hljs-comment\">// 2 (second element)</span>\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(numbers[<span class=\"hljs-number\">4</span>]) <span class=\"hljs-comment\">// 5 (fifth element)</span>\n</code></pre><h3>IMPORTANT: Arrays Start at Index 0!</h3>\n<p>This is one of the most common sources of confusion:</p>\n<pre><code class=\"hljs language-javascript\"><button class=\"copy-btn\">Copy</button><span class=\"hljs-keyword\">const</span> letters = [<span class=\"hljs-string\">&quot;A&quot;</span>, <span class=\"hljs-string\">&quot;B&quot;</span>, <span class=\"hljs-string\">&quot;C&quot;</span>]\n\n<span class=\"hljs-comment\">// To get the FIRST letter, use index 0</span>\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(letters[<span class=\"hljs-number\">0</span>]) <span class=\"hljs-comment\">// &quot;A&quot;</span>\n\n<span class=\"hljs-comment\">// To get the SECOND letter, use index 1</span>\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(letters[<span class=\"hljs-number\">1</span>]) <span class=\"hljs-comment\">// &quot;B&quot;</span>\n\n<span class=\"hljs-comment\">// To get the THIRD letter, use index 2</span>\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(letters[<span class=\"hljs-number\">2</span>]) <span class=\"hljs-comment\">// &quot;C&quot;</span>\n</code></pre><h2>Adding Elements to Arrays</h2>\n<p>Use the <code>push()</code> method to add elements to the end of an array:</p>\n<pre><code class=\"hljs language-javascript\"><button class=\"copy-btn\">Copy</button><span class=\"hljs-keyword\">const</span> numbers = [<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>]\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(numbers) <span class=\"hljs-comment\">// [1, 2, 3]</span>\n\nnumbers.<span class=\"hljs-title function_\">push</span>(<span class=\"hljs-number\">4</span>)\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(numbers) <span class=\"hljs-comment\">// [1, 2, 3, 4]</span>\n\nnumbers.<span class=\"hljs-title function_\">push</span>(<span class=\"hljs-number\">5</span>)\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(numbers) <span class=\"hljs-comment\">// [1, 2, 3, 4, 5]</span>\n</code></pre><h2>Mixed Data Types</h2>\n<p>JavaScript arrays can contain different types of data:</p>\n<pre><code class=\"hljs language-javascript\"><button class=\"copy-btn\">Copy</button><span class=\"hljs-keyword\">const</span> mixedArray = [<span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">&quot;hello&quot;</span>, <span class=\"hljs-literal\">true</span>, <span class=\"hljs-number\">3.14</span>, <span class=\"hljs-literal\">null</span>]\n\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(mixedArray[<span class=\"hljs-number\">0</span>]) <span class=\"hljs-comment\">// 1 (number)</span>\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(mixedArray[<span class=\"hljs-number\">1</span>]) <span class=\"hljs-comment\">// &quot;hello&quot; (string)</span>\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(mixedArray[<span class=\"hljs-number\">2</span>]) <span class=\"hljs-comment\">// true (boolean)</span>\n</code></pre><p>While this is possible, it&#39;s generally better to keep arrays consistent (all numbers, all strings, etc.).</p>\n<h2>Nested Arrays</h2>\n<p>You can put arrays inside other arrays:</p>\n<pre><code class=\"hljs language-javascript\"><button class=\"copy-btn\">Copy</button><span class=\"hljs-keyword\">const</span> nestedArray = [\n  [<span class=\"hljs-string\">&quot;A&quot;</span>, <span class=\"hljs-string\">&quot;B&quot;</span>],\n  [<span class=\"hljs-string\">&quot;C&quot;</span>, <span class=\"hljs-string\">&quot;D&quot;</span>],\n]\n\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(nestedArray[<span class=\"hljs-number\">0</span>]) <span class=\"hljs-comment\">// [&quot;A&quot;, &quot;B&quot;]</span>\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(nestedArray[<span class=\"hljs-number\">1</span>]) <span class=\"hljs-comment\">// [&quot;C&quot;, &quot;D&quot;]</span>\n</code></pre><h3>Accessing Nested Elements</h3>\n<p>Use multiple sets of brackets to access nested elements:</p>\n<pre><code class=\"hljs language-javascript\"><button class=\"copy-btn\">Copy</button><span class=\"hljs-keyword\">const</span> grid = [\n  [<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>],\n  [<span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">5</span>, <span class=\"hljs-number\">6</span>],\n  [<span class=\"hljs-number\">7</span>, <span class=\"hljs-number\">8</span>, <span class=\"hljs-number\">9</span>],\n]\n\n<span class=\"hljs-comment\">// Get the first row</span>\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(grid[<span class=\"hljs-number\">0</span>]) <span class=\"hljs-comment\">// [1, 2, 3]</span>\n\n<span class=\"hljs-comment\">// Get the middle element (5)</span>\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(grid[<span class=\"hljs-number\">1</span>][<span class=\"hljs-number\">1</span>]) <span class=\"hljs-comment\">// 5</span>\n\n<span class=\"hljs-comment\">// Get the bottom-right element (9)</span>\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(grid[<span class=\"hljs-number\">2</span>][<span class=\"hljs-number\">2</span>]) <span class=\"hljs-comment\">// 9</span>\n</code></pre><h2>Array Length</h2>\n<p>Every array has a <code>length</code> property that tells you how many elements it contains:</p>\n<pre><code class=\"hljs language-javascript\"><button class=\"copy-btn\">Copy</button><span class=\"hljs-keyword\">const</span> colors = [<span class=\"hljs-string\">&quot;red&quot;</span>, <span class=\"hljs-string\">&quot;green&quot;</span>, <span class=\"hljs-string\">&quot;blue&quot;</span>]\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(colors.<span class=\"hljs-property\">length</span>) <span class=\"hljs-comment\">// 3</span>\n\n<span class=\"hljs-keyword\">const</span> empty = []\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(empty.<span class=\"hljs-property\">length</span>) <span class=\"hljs-comment\">// 0</span>\n</code></pre><h2>Practice Exercise</h2>\n<p>Create an array with the first 5 letters of the alphabet, then print out the middle element (which should be &quot;C&quot;).</p>\n<details>\n<summary>Solution</summary>\n\n<pre><code class=\"hljs language-javascript\"><button class=\"copy-btn\">Copy</button><span class=\"hljs-keyword\">const</span> letters = [<span class=\"hljs-string\">&quot;A&quot;</span>, <span class=\"hljs-string\">&quot;B&quot;</span>, <span class=\"hljs-string\">&quot;C&quot;</span>, <span class=\"hljs-string\">&quot;D&quot;</span>, <span class=\"hljs-string\">&quot;E&quot;</span>]\n\n<span class=\"hljs-comment\">// The middle element is at index 2 (remember: start counting at 0)</span>\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(letters[<span class=\"hljs-number\">2</span>]) <span class=\"hljs-comment\">// &quot;C&quot;</span>\n</code></pre></details>\n","markdown":"\n# Arrays\n\nUp until now, we've been creating variables that store a single value, but what if we want to store multiple values in one variable? This is where **arrays** come in!\n\n## What is an Array?\n\nAn array is a list of values stored in a single variable. Think of it like a container that can hold multiple items.\n\n```javascript\n// Single values\nconst number = 5\nconst name = \"Kyle\"\n\n// Multiple values in an array\nconst numbers = [1, 2, 3, 4, 5]\nconst names = [\"Kyle\", \"Sarah\", \"John\"]\n```\n\n## Creating Arrays\n\nTo create an array, use square brackets `[]` and separate values with commas:\n\n```javascript\nconst letters = [\"A\", \"B\", \"C\", \"D\", \"E\"]\nconst numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n```\n\nYou can format arrays on multiple lines for readability:\n\n```javascript\nconst longList = [\n  \"Kyle\",\n  \"Sarah\",\n  \"John\",\n  \"Alice\",\n  \"Bob\",\n  \"Charlie\",\n  \"Mike\",\n  \"Emma\",\n]\n```\n\n## Accessing Array Elements\n\nUse square brackets with a number corresponding to the position of the element in the array to access it:\n\n```javascript\nconst numbers = [1, 2, 3, 4, 5]\n\nconsole.log(numbers[0]) // 1 (first element)\nconsole.log(numbers[1]) // 2 (second element)\nconsole.log(numbers[4]) // 5 (fifth element)\n```\n\n### IMPORTANT: Arrays Start at Index 0!\n\nThis is one of the most common sources of confusion:\n\n```javascript\nconst letters = [\"A\", \"B\", \"C\"]\n\n// To get the FIRST letter, use index 0\nconsole.log(letters[0]) // \"A\"\n\n// To get the SECOND letter, use index 1\nconsole.log(letters[1]) // \"B\"\n\n// To get the THIRD letter, use index 2\nconsole.log(letters[2]) // \"C\"\n```\n\n## Adding Elements to Arrays\n\nUse the `push()` method to add elements to the end of an array:\n\n```javascript\nconst numbers = [1, 2, 3]\nconsole.log(numbers) // [1, 2, 3]\n\nnumbers.push(4)\nconsole.log(numbers) // [1, 2, 3, 4]\n\nnumbers.push(5)\nconsole.log(numbers) // [1, 2, 3, 4, 5]\n```\n\n## Mixed Data Types\n\nJavaScript arrays can contain different types of data:\n\n```javascript\nconst mixedArray = [1, \"hello\", true, 3.14, null]\n\nconsole.log(mixedArray[0]) // 1 (number)\nconsole.log(mixedArray[1]) // \"hello\" (string)\nconsole.log(mixedArray[2]) // true (boolean)\n```\n\nWhile this is possible, it's generally better to keep arrays consistent (all numbers, all strings, etc.).\n\n## Nested Arrays\n\nYou can put arrays inside other arrays:\n\n```javascript\nconst nestedArray = [\n  [\"A\", \"B\"],\n  [\"C\", \"D\"],\n]\n\nconsole.log(nestedArray[0]) // [\"A\", \"B\"]\nconsole.log(nestedArray[1]) // [\"C\", \"D\"]\n```\n\n### Accessing Nested Elements\n\nUse multiple sets of brackets to access nested elements:\n\n```javascript\nconst grid = [\n  [1, 2, 3],\n  [4, 5, 6],\n  [7, 8, 9],\n]\n\n// Get the first row\nconsole.log(grid[0]) // [1, 2, 3]\n\n// Get the middle element (5)\nconsole.log(grid[1][1]) // 5\n\n// Get the bottom-right element (9)\nconsole.log(grid[2][2]) // 9\n```\n\n## Array Length\n\nEvery array has a `length` property that tells you how many elements it contains:\n\n```javascript\nconst colors = [\"red\", \"green\", \"blue\"]\nconsole.log(colors.length) // 3\n\nconst empty = []\nconsole.log(empty.length) // 0\n```\n\n## Practice Exercise\n\nCreate an array with the first 5 letters of the alphabet, then print out the middle element (which should be \"C\").\n\n<details>\n<summary>Solution</summary>\n\n```javascript\nconst letters = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n\n// The middle element is at index 2 (remember: start counting at 0)\nconsole.log(letters[2]) // \"C\"\n```\n\n</details>\n","slug":"arrays","title":"Arrays","section":"Advanced Variables","icon":"layer-group","filePath":"/home/runner/work/fem-getting-started-with-javascript/fem-getting-started-with-javascript/lessons/07-advanced-variables/E-arrays.md","nextSlug":"/fem-getting-started-with-javascript/lessons/advanced-variables/objects","prevSlug":"/fem-getting-started-with-javascript/lessons/advanced-variables/equality-type-comparisons"}},"__N_SSG":true}