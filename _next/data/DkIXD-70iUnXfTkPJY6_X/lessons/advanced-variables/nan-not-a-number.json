{"pageProps":{"post":{"attributes":{"title":"NaN (Not a Number)","description":"Learn about NaN (Not a Number) and how to properly check for it in JavaScript."},"html":"<h1><code>NaN</code> (Not a Number)</h1>\n<p><code>NaN</code> is a special value in JavaScript that stands for &quot;Not a Number&quot;.</p>\n<h2>What Causes <code>NaN</code>?</h2>\n<p><code>NaN</code> occurs when you attempt to convert non-numeric variables (such as strings) to numbers:</p>\n<pre><code class=\"hljs language-javascript\"><button class=\"copy-btn\">Copy</button><span class=\"hljs-keyword\">const</span> result = <span class=\"hljs-built_in\">parseInt</span>(<span class=\"hljs-string\">&quot;hello&quot;</span>)\n\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(result) <span class=\"hljs-comment\">// NaN</span>\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-keyword\">typeof</span> result) <span class=\"hljs-comment\">// &quot;number&quot;</span>\n</code></pre><p>Even though <code>NaN</code> means &quot;Not a Number&quot;, its type is actually <code>&quot;number&quot;</code>.</p>\n<h2>Checking for <code>NaN</code></h2>\n<p>You might think you can check for <code>NaN</code> like this, but it doesn&#39;t work:</p>\n<pre><code class=\"hljs language-javascript\"><button class=\"copy-btn\">Copy</button><span class=\"hljs-keyword\">const</span> a = <span class=\"hljs-built_in\">parseInt</span>(<span class=\"hljs-string\">&quot;hello&quot;</span>)\n\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(a == <span class=\"hljs-title class_\">NaN</span>) <span class=\"hljs-comment\">// false</span>\n</code></pre><p><strong>Why doesn&#39;t this work?</strong> <code>NaN</code> is never equal to anything, including itself!</p>\n<pre><code class=\"hljs language-javascript\"><button class=\"copy-btn\">Copy</button><span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-title class_\">NaN</span> == <span class=\"hljs-title class_\">NaN</span>) <span class=\"hljs-comment\">// false</span>\n</code></pre><h3>The Correct Way: <code>isNaN()</code></h3>\n<p>To check if a value is <code>NaN</code>, use the built-in <code>isNaN()</code> function:</p>\n<pre><code class=\"hljs language-javascript\"><button class=\"copy-btn\">Copy</button><span class=\"hljs-keyword\">const</span> a = <span class=\"hljs-built_in\">parseInt</span>(<span class=\"hljs-string\">&quot;hello&quot;</span>) <span class=\"hljs-comment\">// NaN</span>\n<span class=\"hljs-keyword\">const</span> b = <span class=\"hljs-number\">5</span> <span class=\"hljs-comment\">// number</span>\n\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-built_in\">isNaN</span>(a)) <span class=\"hljs-comment\">// true (a is NaN)</span>\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-built_in\">isNaN</span>(b)) <span class=\"hljs-comment\">// false (b is a valid number)</span>\n</code></pre>","markdown":"\n# `NaN` (Not a Number)\n\n`NaN` is a special value in JavaScript that stands for \"Not a Number\".\n\n## What Causes `NaN`?\n\n`NaN` occurs when you attempt to convert non-numeric variables (such as strings) to numbers:\n\n```javascript\nconst result = parseInt(\"hello\")\n\nconsole.log(result) // NaN\nconsole.log(typeof result) // \"number\"\n```\n\nEven though `NaN` means \"Not a Number\", its type is actually `\"number\"`.\n\n## Checking for `NaN`\n\nYou might think you can check for `NaN` like this, but it doesn't work:\n\n```javascript\nconst a = parseInt(\"hello\")\n\nconsole.log(a == NaN) // false\n```\n\n**Why doesn't this work?** `NaN` is never equal to anything, including itself!\n\n```javascript\nconsole.log(NaN == NaN) // false\n```\n\n### The Correct Way: `isNaN()`\n\nTo check if a value is `NaN`, use the built-in `isNaN()` function:\n\n```javascript\nconst a = parseInt(\"hello\") // NaN\nconst b = 5 // number\n\nconsole.log(isNaN(a)) // true (a is NaN)\nconsole.log(isNaN(b)) // false (b is a valid number)\n```\n","slug":"nan-not-a-number","title":"NaN (Not a Number)","section":"Advanced Variables","icon":"layer-group","filePath":"/home/runner/work/fem-getting-started-with-javascript/fem-getting-started-with-javascript/lessons/07-advanced-variables/C-nan-not-a-number.md","nextSlug":"/fem-getting-started-with-javascript/lessons/advanced-variables/equality-type-comparisons","prevSlug":"/fem-getting-started-with-javascript/lessons/advanced-variables/type-coercion"}},"__N_SSG":true}